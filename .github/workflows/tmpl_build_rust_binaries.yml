name: "Build"

on:
  workflow_call:
    inputs:
      rust-target-path:
        required: true
        type: string
      binaries-path:
        required: true
        type: string
      cache-key:
        required: true
        type: string
      cache-restore-key:
        required: true
        type: string
      force-rebuild:
        required: true
        type: string

jobs:
  buildRustBinaries:
    name: "🏗️ Build libpact_ffi.a"
    runs-on: macos-15
    timeout-minutes: 60
    strategy:
      fail-fast: true

    concurrency:
      group: build-latest-binaries-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "♻️ Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "🗂️ Cache rust binaries"
        uses: actions/cache@v4
        with:
          path: |
            ${{ inputs.rust-target-path }}
            ${{ inputs.binaries-path }}
          key: ${{ inputs.cache-restore-key }}-${{ runner.os }}-${{ hashFiles('**/libpact_ffi.version') }}
          restore-keys: |
            ${{ inputs.cache-restore-key }}-${{ runner.os }}

      - name: "🔍 Check binaries exist in ${{ inputs.binaries-path }}"
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "Resources/**/libpact_ffi.a"

      - name: "🛠 Prepare Tools"
        if: ${{ steps.check_files.outputs.files_exists == 'false' || inputs.force-rebuild == 'true' }}
        run: |
          sh Support/Scripts/Config/prepare_build_tools

      - name: "🎁 Build FFI binaries (skipping if cached)"
        if: ${{ steps.check_files.outputs.files_exists == 'false' || inputs.force-rebuild == 'true' }}
        run: |
          sh Support/Scripts/CI/build_rust_dependencies

      - name: "🚚 Upload binaries"
        if: ${{ steps.check_files.outputs.files_exists == 'false' || inputs.force-rebuild == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: Resources
          path: Resources
