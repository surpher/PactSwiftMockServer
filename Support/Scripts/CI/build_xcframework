#!/usr/bin/env bash
# shellcheck disable=SC1091

#  PactSwiftMockService
#
#  Created by Marko Justinek on 19/8/21.
#  Copyright ¬© 2021 Marko Justinek. All rights reserved.
#  Permission to use, copy, modify, and/or distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
#  SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
#  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

set -ue
set -o pipefail

BUILD_XCFRAMEWORK_SOURCE_DIR="${BASH_SOURCE[0]%/*}"
TMP_DIR="${BUILD_XCFRAMEWORK_SOURCE_DIR}/../../../.tmp/build-xcframework"

source "${BUILD_XCFRAMEWORK_SOURCE_DIR}/../utils.sh"
source "${BUILD_XCFRAMEWORK_SOURCE_DIR}/../Config/config.sh"

# Only use xcbeautify if it can be found in path.
XCBEAUTIFY=$(command -v xcbeautify || command -v cat)

XCFRAMEWORK_VERSION="$1"
NEW_XCFRAMEWORK_NAME="$XCFRAMEWORK_NAME-$XCFRAMEWORK_VERSION.$XCFRAMEWORK_EXTENSION"

########################
# Pre-build checks     #
########################

# Check for Xcode version available
check_xcode

# Setup
echo "‚ÑπÔ∏è Looking for $XCPRODUCT_NAME.xcodeproj"
if [ ! -d "$XCPRODUCT_NAME.xcodeproj" ]; then
    echo "üö® Run this in the same folder as \"$XCPRODUCT_NAME.xcodeproj\"!"
    echo "Your current location is: $(pwd)"
    exit 1
fi

echo "‚ÑπÔ∏è Removing deprecated XCFramework..."
executeCommand "find . -type d -name \"$XCFRAMEWORK_NAME-*.$XCFRAMEWORK_EXTENSION\" -exec rm -rf {} +"
echo "üëç Removed deprecated XCFramework"

echo "‚ÑπÔ∏è Setting up $TMP_DIR folder"
rm -fr "$TMP_DIR"
mkdir -p "$TMP_DIR"

# iOS
echo "üèó Building for iOS..."
xcodebuild archive \
    -sdk iphoneos IPHONEOS_DEPLOYMENT_TARGET="$IPHONEOS_DEPLOYMENT_TARGET" \
    -arch arm64 \
    -scheme "$XCPRODUCT_NAME-iphoneos" \
    -archivePath "$TMP_DIR/iphoneos/$XCPRODUCT_NAME.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | $XCBEAUTIFY
echo "üëç Framework for physical arm64 device built"

echo "üèó Building for iOS Simulator..."
xcodebuild archive \
    -sdk iphonesimulator IPHONEOS_DEPLOYMENT_TARGET="$IPHONEOS_DEPLOYMENT_TARGET" \
    -arch x86_64 \
    -arch arm64 \
    -scheme "$XCPRODUCT_NAME-iOS" \
    -archivePath "$TMP_DIR/iphonesimulator/$XCPRODUCT_NAME.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | $XCBEAUTIFY
echo "üëç Framework for iOS Simulator built for x86_64 and arm64 architecture"

# macOS
echo "üèó Building for macOS..."
xcodebuild archive \
    -sdk macosx MACOSX_DEPLOYMENT_TARGET="$MACOSX_DEPLOYMENT_TARGET" \
    -arch x86_64 \
    -arch arm64 \
    -scheme "$XCPRODUCT_NAME-macOS" \
    -archivePath "$TMP_DIR/macos/$XCPRODUCT_NAME.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | $XCBEAUTIFY
echo "üëç  Framework for macOS built for x86_64 and arm64 architectures"

# XCFramework
echo "üèó Building XCFramework..."
xcodebuild -create-xcframework -output "$NEW_XCFRAMEWORK_NAME" \
    -framework "$TMP_DIR"/iphoneos/"$XCPRODUCT_NAME".xcarchive/Products/Library/Frameworks/"$XCPRODUCT_NAME".framework \
    -framework "$TMP_DIR"/iphonesimulator/"$XCPRODUCT_NAME".xcarchive/Products/Library/Frameworks/"$XCPRODUCT_NAME".framework \
    -framework "$TMP_DIR"/macos/"$XCPRODUCT_NAME".xcarchive/Products/Library/Frameworks/"$XCPRODUCT_NAME".framework

# Zip it up
zip -r -X -q "$NEW_XCFRAMEWORK_NAME".zip "$NEW_XCFRAMEWORK_NAME"

# Calculate checksum
swift package compute-checksum "$NEW_XCFRAMEWORK_NAME".zip > "$NEW_XCFRAMEWORK_NAME.zip.checksum"

# Print out for DEBUG purposes
echo "üîç XCFramework information..."
executeCommand "ls -la $NEW_XCFRAMEWORK_NAME.zip"
executeCommand "tail $NEW_XCFRAMEWORK_NAME.zip.checksum"

# Cleanup
echo "‚ÑπÔ∏è Removing $TMP_DIR folder..."
rm -fr "$TMP_DIR"

echo -e "üß≥ XCFramework $GREEN$NEW_XCFRAMEWORK_NAME$NOCOLOR built!"
