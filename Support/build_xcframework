#!/usr/bin/env bash

#  PactSwiftMockService
#
#  Created by Marko Justinek on 19/8/21.
#  Copyright ¬© 2021 Marko Justinek. All rights reserved.
#  Permission to use, copy, modify, and/or distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
#  SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
#  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

set -o pipefail

# Scirpt that prepares PactSwift.xcframework

# Properties

TMP_DIR="./.tmp/build-xcframework"
PRODUCT_NAME="PactSwiftMockServer"

# Helpers

function handleInput {
  if [[ ! $1 =~ ^[Yy]$ ]]
	then
    echo "‚ö†Ô∏è  Aborting the process of building XCFrameworks!"
    exit 1
  fi
}

########################
# Pre-build checks     #
########################

# Check whether the Xcode 12.x is being used to generate the XCFramework
# Otherwise a _concurrency fatal issue will be raised if PactSwiftMockSerer is
# used in a project built with Xcode 12.x

echo "‚ö†Ô∏è Checking for the right Xcode tools..."
xcode-select -p && xcode-select -v

read -r -p "üö® Are you running this using Xcode 12.x tools!? It should be 12.x!" -n 1 USER_INPUT
handleInput $USER_INPUT
echo

# Setup

echo "‚ÑπÔ∏è  Looking for ${PRODUCT_NAME}.xcodeproj"
if [ ! -d "${PRODUCT_NAME}.xcodeproj" ]; then
    echo "üö® Run this in the same folder as \"${PRODUCT_NAME}.xcodeproj\"."
    exit 1
fi

echo "‚ÑπÔ∏è  Removing existing XCFramework"
rm -fr "./${PRODUCT_NAME}.xcframework"
echo "üëç  Removed existing XCFramework"

echo "‚ÑπÔ∏è  Preparing ${TMP_DIR} folder"
mkdir -p $TMP_DIR
rm -fr $TMP_DIR

# iOS

echo "üèó  Building for iOS..."
xcodebuild archive \
    -sdk iphoneos IPHONEOS_DEPLOYMENT_TARGET=12.0 \
    -arch arm64 \
    -scheme "${PRODUCT_NAME}-iphoneos" \
    -archivePath "${TMP_DIR}/iphoneos/${PRODUCT_NAME}.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | xcbeautify

echo "üëç  Framework for arm64 device built"

echo "üèó  Building for iOS Simulator..."
xcodebuild archive \
    -sdk iphonesimulator IPHONEOS_DEPLOYMENT_TARGET=12.0 \
    -arch x86_64 -arch arm64 \
    -scheme "${PRODUCT_NAME}-iOS" \
    -archivePath "${TMP_DIR}/iphonesimulator/${PRODUCT_NAME}.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | xcbeautify
echo "üëç  Framework for iOS Simulator built for x86_64 and arm64 architecture"

# macOS

echo "üèó  Building for macOS..."
xcodebuild archive \
    -sdk macosx MACOSX_DEPLOYMENT_TARGET=11.0 \
    -arch x86_64 -arch arm64 \
    -scheme "${PRODUCT_NAME}-macOS" \
    -archivePath "${TMP_DIR}/macos/${PRODUCT_NAME}.xcarchive" \
    BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
    SKIP_INSTALL=NO | xcbeautify
echo "üëç  Framework for macOS built for x86_64 and arm64 architectures"

# XCFramework

echo "üèó  Building XCFramework..."
xcodebuild -create-xcframework -output ./$PRODUCT_NAME.xcframework \
    -framework $TMP_DIR/iphoneos/$PRODUCT_NAME.xcarchive/Products/Library/Frameworks/$PRODUCT_NAME.framework \
    -framework $TMP_DIR/iphonesimulator/$PRODUCT_NAME.xcarchive/Products/Library/Frameworks/$PRODUCT_NAME.framework \
    -framework $TMP_DIR/macos/$PRODUCT_NAME.xcarchive/Products/Library/Frameworks/$PRODUCT_NAME.framework

# Cleanup
echo "‚ÑπÔ∏è  Removing $TMP_DIR folder..."
rm -fr $TMP_DIR

echo "üéâ Done!"
